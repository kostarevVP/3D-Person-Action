using WKosArch.DependencyInjection;
using WKosArch.Domain.Contexts;
using WKosArch.Domain.Features;
using WKosArch.Extentions;
using UnityEngine;
    

 #ROOTNAMESPACEBEGIN#
    [CreateAssetMenu(fileName = " #SCRIPTNAME#", menuName = "Game/Installers/#SCRIPTNAME#")]
    public class  #SCRIPTNAME# : FeatureInstaller
    {

        public override IFeature Create(IDiContainer container)
        {
            var feature = new Feature();
        
            BindAsSingle(container, feature);

            return feature;
        }

        public override void Dispose() { }

        private void BindAsSingle(IDiContainer container, var feature)
        {
            container.RegisterSingleton(_ => feature);
            Log.PrintColor($"[#SCRIPTNAME#] Create and Bind as Single", Color.cyan);
        }
    }

#ROOTNAMESPACEEND#